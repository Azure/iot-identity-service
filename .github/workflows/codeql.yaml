name: "CodeQL"

on:
  push:
    branches: [ "main", "release/1.*" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "release/1.*" ]
  schedule:
    - cron: '34 19 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - run: |
        sudo apt install -y \
          acl autoconf autoconf-archive automake build-essential clang cmake curl git jq libclang1 \
          libltdl-dev libssl-dev libtss2-dev libtool llvm-dev pkg-config
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
        ~/.cargo/bin/rustup self update
        ~/.cargo/bin/rustup set profile minimal
        BINDGEN_VERSION='0.60.0'
        CBINDGEN_VERSION='0.24.2'
        ~/.cargo/bin/cargo install bindgen --version "=$BINDGEN_VERSION"
        ~/.cargo/bin/cargo install cbindgen --version "=$CBINDGEN_VERSION"

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - run: |
        rm -r third-party/tpm2-tss
        make

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
