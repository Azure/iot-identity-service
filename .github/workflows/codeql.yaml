name: "CodeQL"

on:
  push:
    branches: [ "main", "release/1.*" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "release/1.*" ]
  schedule:
    - cron: '34 19 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - run: |
        sudo apt install -y \
          acl autoconf autoconf-archive automake build-essential clang cmake curl git jq libclang1 \
          libltdl-dev libssl-dev libtss2-dev libtool llvm-dev pkg-config

        curl -Lo ~/.cargo/bin/rustup 'https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init'
        chmod +x ~/.cargo/bin/rustup
        hash -r

        rustup self update
        rustup set profile minimal

        BINDGEN_VERSION='0.60.0'
        CBINDGEN_VERSION='0.24.2'
        cargo install bindgen --force --version "=$BINDGEN_VERSION"
        cargo install cbindgen --force --version "=$CBINDGEN_VERSION"

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - run: |
        rm -r third-party/tpm2-tss
        make

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
