# Used to run the E2E tests against a branch of your choice from the github.com UI.
#
# DEVNOTE:
#
# Keep `jobs` in sync with e2e-tests-scheduled.yaml. Differences are:
#
# - manual has `on: workflow_dispatch` while scheduled has `on: schedule`
# - manual uses `github.event.inputs` for the branch while scheduled uses `strategy.matrix`

name: 'e2e-tests-manual'

on:
  'workflow_dispatch':
    inputs:
      branch:
        default: 'main'

jobs:
  suite-setup:
    runs-on: 'ubuntu-18.04'

    steps:
    - uses: 'actions/checkout@v1'
      with:
        ref: "${{ github.event.inputs.branch }}"

    - name: 'Run'
      run: |
        timeout 45m ./ci/e2e-tests/suite-setup.sh
      env:
        BRANCH: "${{ github.event.inputs.branch }}"

        AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_USERNAME: "${{ secrets.AZURE_USERNAME }}"
        AZURE_PASSWORD: "${{ secrets.AZURE_PASSWORD }}"
        AZURE_RESOURCE_GROUP_NAME: "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"
        AZURE_LOCATION: "${{ secrets.AZURE_LOCATION }}"

  test-run:
    needs: 'suite-setup'

    runs-on: 'ubuntu-18.04'

    strategy:
      fail-fast: false

      matrix:
        os:
        - 'centos:7'
        - 'debian:10'
        - 'debian:11'
        # EL8 VMs spontaneously lose ssh after installing updates. Disable it for now.
        # - 'platform:el8'
        - 'ubuntu:18.04'
        - 'ubuntu:20.04'
        test_name:
        - 'manual-symmetric-key'
        - 'manual-x509'
        - 'dps-symmetric-key'
        - 'dps-x509'

      max-parallel: 10

    steps:
    - uses: 'actions/checkout@v1'
      with:
        ref: "${{ github.event.inputs.branch }}"

    - name: 'Run'
      run: |
        timeout 30m ./ci/e2e-tests/test-run.sh '${{ matrix.test_name }}' &&
        timeout 5m ./ci/e2e-tests/test-cleanup.sh '${{ matrix.test_name }}'
      env:
        BRANCH: "${{ github.event.inputs.branch }}"

        OS: "${{ matrix.os }}"

        AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_USERNAME: "${{ secrets.AZURE_USERNAME }}"
        AZURE_PASSWORD: "${{ secrets.AZURE_PASSWORD }}"
        AZURE_RESOURCE_GROUP_NAME: "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"
        AZURE_LOCATION: "${{ secrets.AZURE_LOCATION }}"

        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: 'Clean up on failure'
      run: |
        timeout 5m ./ci/e2e-tests/test-cleanup.sh ${{ matrix.test_name }}
        exit 1 # Force the workflow to fail even if this step succeeds
      if: "${{ failure() }}"
      env:
        BRANCH: "${{ github.event.inputs.branch }}"

        OS: "${{ matrix.os }}"

        AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_USERNAME: "${{ secrets.AZURE_USERNAME }}"
        AZURE_PASSWORD: "${{ secrets.AZURE_PASSWORD }}"
        AZURE_RESOURCE_GROUP_NAME: "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"
        AZURE_LOCATION: "${{ secrets.AZURE_LOCATION }}"

  suite-cleanup:
    needs: 'test-run'
    if: "${{ success() }}"

    runs-on: 'ubuntu-18.04'

    steps:
    - uses: 'actions/checkout@v1'
      with:
        ref: "${{ github.event.inputs.branch }}"

    - name: 'Clean up'
      run: |
        timeout 5m ./ci/e2e-tests/suite-cleanup.sh
      env:
        BRANCH: "${{ github.event.inputs.branch }}"

        AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_USERNAME: "${{ secrets.AZURE_USERNAME }}"
        AZURE_PASSWORD: "${{ secrets.AZURE_PASSWORD }}"
        AZURE_RESOURCE_GROUP_NAME: "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"
        AZURE_LOCATION: "${{ secrets.AZURE_LOCATION }}"

  suite-cleanup-fail:
    needs: 'test-run'
    if: "${{ failure() }}"

    runs-on: 'ubuntu-18.04'

    steps:
    - uses: 'actions/checkout@v1'
      with:
        ref: "${{ github.event.inputs.branch }}"

    - name: 'Clean up on failure'
      run: |
        timeout 5m ./ci/e2e-tests/suite-cleanup.sh
        exit 1 # Force the workflow to fail even if this step succeeds
      env:
        BRANCH: "${{ github.event.inputs.branch }}"

        AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_USERNAME: "${{ secrets.AZURE_USERNAME }}"
        AZURE_PASSWORD: "${{ secrets.AZURE_PASSWORD }}"
        AZURE_RESOURCE_GROUP_NAME: "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"
        AZURE_LOCATION: "${{ secrets.AZURE_LOCATION }}"
