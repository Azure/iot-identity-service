name: 'packages'

on:
- 'pull_request'
- 'push'

jobs:
  packages:
    runs-on: 'ubuntu-22.04'

    strategy:
      fail-fast: false

      matrix:
        container_os:
        - 'debian:10-slim'
        - 'debian:11-slim'
        - 'redhat/ubi8:latest'
        - 'redhat/ubi9:latest'
        - 'ubuntu:20.04'
        - 'ubuntu:22.04'
        arch:
        - 'amd64'
        - 'arm32v7'
        - 'aarch64'
        os:
        - ''
        exclude:
        # More investigation needed for RHEL 8 and 9. Excluding for now.
        - container_os: 'redhat/ubi8:latest'
          arch: 'arm32v7'
        - container_os: 'redhat/ubi8:latest'
          arch: 'aarch64'
        - container_os: 'redhat/ubi9:latest'
          arch: 'arm32v7'
        - container_os: 'redhat/ubi9:latest'
          arch: 'aarch64'
        # Include this for mariner package builds. Mariner cannot be built on its own OS so we need an Ubuntu container.
        include:
        - container_os: 'ubuntu:20.04'
          arch: 'amd64'
          os: 'mariner:2'

    steps:
    - uses: 'actions/checkout@v3'
      with:
        submodules: 'recursive'
    - name: 'Run'
      run: |
        sudo df -h
        sudo rm -rf /usr/local
        sudo df -h
        docker run --rm \
          -v "$GITHUB_WORKSPACE:/src" \
          -e "ARCH=$ARCH" \
          -e "OS=$OS" \
          -e "PACKAGE_VERSION=$PACKAGE_VERSION" \
          -e "PACKAGE_RELEASE=$PACKAGE_RELEASE" \
          --privileged \
          "${{ matrix.container_os }}" \
          '/src/ci/package.sh'
      env:
        ARCH: "${{ matrix.arch }}"
        OS: "${{ matrix.os }}"
        PACKAGE_VERSION: '1.5.0'
        # PACKAGE_RELEASE should always be '1'.
        PACKAGE_RELEASE: '1'
    - name: 'Generate artifact properties'
      id: 'generate-artifact-properties'
      run: |
        OS="${{ matrix.os }}"
        if [ -z "$OS" ]; then
          os_package="${{ matrix.container_os }}"
        else
          os_package="$OS"
        fi
        os_package="$(sed -e 's@[:/]@-@g' <<< "$os_package")"
        echo "artifact-name=packages_${os_package}_${{ matrix.arch }}" >> $GITHUB_OUTPUT
    - name: 'Upload'
      uses: 'actions/upload-artifact@v3'
      with:
        name: "${{ steps.generate-artifact-properties.outputs.artifact-name }}"
        path: 'packages'

  snap:
    strategy:
      fail-fast: false

      matrix:
        runner:
        - arch: amd64
          pool: iot-identity-1es-hosted-linux-amd64
          image: agent-aziotedge-ubuntu-22.04-msmoby
        - arch: aarch64
          pool: iot-identity-1es-hosted-linux-arm64
          image: agent-aziotedge-ubuntu-22.04-arm64-msmoby

    runs-on:
    - self-hosted
    - 1ES.Pool=${{ matrix.runner.pool }}
    - 1ES.ImageOverride=${{ matrix.runner.image }}

    steps:
    - uses: 'actions/checkout@v3'
      with:
        submodules: 'recursive'

    - name: 'Run'
      uses: 'snapcore/action-build@v1'
      id: 'snapcraft'
      with:
        build-info: true

    - name: 'Upload'
      uses: 'actions/upload-artifact@v3'
      with:
        name: 'packages_snap_${{ matrix.runner.arch }}'
        path: '${{ steps.snapcraft.outputs.snap }}'
